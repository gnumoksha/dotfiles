#################################
#                               #
#             zshrc             #
#                               #
#################################

#start=`date +%s.%N`

# coloquei aqui por usa um alias para ls que nao funciona
[[ -s "/etc/grc.zsh" ]] && source /etc/grc.zsh

# Path to my dotfiles project.
dotfiles="$HOME/play/side_projects/dotfiles"

# Path to my oh-my-zsh installation.
export ZSH="$dotfiles/shell/zsh/oh-my-zsh"

export TERM="xterm-256color"

# ZSH settings
setopt append_history           # Do not overwrite history
setopt extended_history         # Also record time and duration of commands.
setopt share_history            # Share history between multiple shells
setopt hist_expire_dups_first   # Clear duplicates when trimming internal hist.
setopt hist_find_no_dups        # Do not display duplicates during searches.
setopt hist_ignore_dups         # Ignore consecutive duplicates.
setopt hist_ignore_all_dups     # Remember only one unique copy of the command.
setopt hist_reduce_blanks       # Remove superfluous blanks.
setopt hist_save_no_dups        # Omit older commands in favor of newer ones.
setopt prompt_subst             # Make sure prompt is able to be generated properly.

#source "$dotfiles/shell/zsh/theme_settings.zsh"
#source "$dotfiles/shell/zsh/powerlevel9k/powerlevel9k.zsh-theme"

source "$ZSH/oh-my-zsh.sh"

#ZSH_THEME=alanpeabody
#ZSH_THEME=daveverwer
#ZSH_THEME=dieter
#SH_THEME=gentoo
#ZSH_THEME=gianu
#ZSH_THEME=maran
#ZSH_THEME=miloshadzic
#root ZSH_THEME=risto
#ideia bacana ZSH_THEME=wezm

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
#
# 2017-10-20 - Tobias - I checked the repository and those are the useful plugins:
#
# colored-man-pages composer copybuffer copydir docker docker-compose
# git git-flow-avh git-extras
# gpg-agent history-substring-search httpie nmap npm pass pip
# redis-cli rsync screen shrink-path ssh-agent systemadmin tmux
# vi-mode virtualenv
#
# Repository: https://github.com/robbyrussell/oh-my-zsh/tree/master/plugins

ZPLUG_INSTALLED='/usr/local/opt/zplug/installed'
ZPLUG_HOME='/usr/local/opt/zplug/home'
ZPLUG_BIN='/usr/local/bin'
source $ZPLUG_INSTALLED/init.zsh
zplug "plugins/colored-man-pages", from:oh-my-zsh
zplug "plugins/copybuffer", from:oh-my-zsh
zplug "plugins/copydir", from:oh-my-zsh
zplug "plugins/docker", from:oh-my-zsh
zplug "plugins/docker-compose", from:oh-my-zsh
zplug "plugins/git-fast", from:oh-my-zsh
zplug "plugins/git-flow-avh", from:oh-my-zsh
zplug "plugins/gpg-agent", from:oh-my-zsh
zplug "plugins/httpie", from:oh-my-zsh
zplug "plugins/pass", from:oh-my-zsh

zplug 'zplug/zplug', hook-build:'zplug --self-manage'

#zplug "sharkdp/fd", from:gh-r, as:command, rename-to:fd, use:"x86_64-unknown-linux-gnu.tar.gz"
#zplug "junegunn/fzf-bin", from:gh-r, as:command, rename-to:fzf, use:"*linux_amd64*"
zplug "junegunn/fzf", from:github, as:command, rename-to:fzf, hook-build:"./install --all"
zplug "stedolan/jq", from:gh-r, as:command, rename-to:jq
zplug "so-fancy/diff-so-fancy", from:github, as:command, rename-to:diff-so-fancy
zplug "supercrabtree/k"
zplug "zsh-users/zsh-syntax-highlighting", defer:2
zplug 'wfxr/forgit', defer:1
#zplug "zlsun/solarized-man"
zplug "pindexis/marker", from:github, as:command, rename-to:marker, hook-build:"./install.py"

# Themes and dircolors {{{
#   zplug "halfo/lambda-mod-zsh-theme", as:theme
#zplug "agkozak/agkozak-zsh-theme"
#zplug "zakaziko99/agnosterzak-ohmyzsh-theme", as:theme
#zplug "eendroroy/alien-minimal"
zplug "mafredri/zsh-async", from:github
#zplug "sindresorhus/pure", use:pure.zsh, from:github, as:theme
#zplug "bhilburn/powerlevel9k", use:powerlevel9k.zsh-theme
#zplug "denysdovhan/spaceship-prompt", use:spaceship.zsh, from:github, as:theme
#zplug "el1t/statusline"
#zplug 'simnalamburt/shellder', as:theme
zplug "caiogondim/bullet-train.zsh", use:bullet-train.zsh-theme, defer:3 # defer until other plugins like oh-my-zsh is loaded
#zplug "joel-porquet/zsh-dircolors-solarized"
#zplug "arcticicestudio/nord-gnome-terminal", from:github, hook-build:"./src/nord.sh"
#zplug "arcticicestudio/nord-dircolors", from:github, hook-build:"mv ~/.dir_colors{,.bkp} &&  ./install.sh"
zplug "peterhellberg/dircolors-jellybeans", from:github, hook-build:"mv ~/.dir_colors{,.bkp} &&  cp dircolors.jellybeans ~/.dir_colors"
#}}}

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
	printf "Install missing plugins? [y/N]: "
	if read; then
		echo; zplug install
	fi
fi

zplug load

#BULLETTRAIN_PROMPT_ORDER=(
  #git
  #context
  #dir
  #time
#)
BULLETTRAIN_STATUS_EXIT_SHOW=true
BULLETTRAIN_DIR_FG=black
BULLETTRAIN_GIT_COLORIZE_DIRTY=true

export MARKER_HOME="$ZPLUG_HOME/repos/pindexis/marker"
export MARKER_DATA_HOME="$MARKER_HOME/.data"
source ${MARKER_HOME}/bin/marker.sh

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Setting fd as the default source for fzf
export FZF_DEFAULT_COMMAND='fd --type f'
# To apply the command to CTRL-T as well
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
#
export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --inline-info'

# Use fd (https://github.com/sharkdp/fd) instead of the default find
# command for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}

# fkill - kill process
fkill() {
  local pid
  pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')

  if [ "x$pid" != "x" ]
  then
    echo $pid | xargs kill -${1:-9}
  fi
}
# fco_preview - checkout git branch/tag, with a preview showing the commits between the tag/branch and HEAD
fco_preview() {
  local tags branches target
  tags=$(
git tag | awk '{print "\x1b[31;1mtag\x1b[m\t" $1}') || return
  branches=$(
git branch --all | grep -v HEAD |
sed "s/.* //" | sed "s#remotes/[^/]*/##" |
sort -u | awk '{print "\x1b[34;1mbranch\x1b[m\t" $1}') || return
  target=$(
(echo "$tags"; echo "$branches") |
    fzf --no-hscroll --no-multi --delimiter="\t" -n 2 \
        --ansi --preview="git log -200 --pretty=format:%s $(echo {+2..} |  sed 's/$/../' )" ) || return
  git checkout $(echo "$target" | awk '{print $2}')
}
# change to the directory of the file
cdf() {
   local file
   local dir
   file=$(fzf +m -q "$1") && dir=$(dirname "$file") && cd "$dir"
}


# User configuration

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

source "$dotfiles/shell/common/bootstrap.sh"


# NVM is too slow
# https://github.com/creationix/nvm/issues/539#issuecomment-245791291
function enable_nvm {
	export NVM_DIR="$HOME/.nvm"
	[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" --no-use # This loads nvm
	alias node='unalias node ; unalias npm ; nvm use default ; node $@'
	alias npm='unalias node ; unalias npm ; nvm use default ; npm $@'
}

# See:
# https://github.com/tonylambiris/dotfiles/blob/master/dot.zshrc


# see https://github.com/wfxr/forgit#custom-options
alias git-add="ga"
alias git-log="glo"
alias git-diff="gd"
alias git-checkout="gcf"
alias git-clean="gclan"
alias git-ignore="git"

# https://github.com/rkitover/vimpager
#export PAGER=/opt/apps/vimpager/vimpager
#alias less=$PAGER
#alias zless=$PAGER

#end=`date +%s.%N`
#runtime=$((end-start))
#echo "Runtime $runtime."

if [ $TILIX_ID ] || [ $VTE_VERSION ]; then
  if [ ! -e /etc/profile.d/vte.sh ]; then
    echo "You need to symlink vte.sh. Type sudo password:"
    sudo ln -s /etc/profile.d/vte-2.91.sh /etc/profile.d/vte.sh
  fi
  source /etc/profile.d/vte.sh
fi

function doTmuxStuff {
  if [[ ! -e ~/.tmux/plugins/tpm ]]; then
    echo "Installing Tmux Plugin Manager (TPM)..."
    git clone --depth=1 https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
  fi
}

if [[ ! -z "$TMUX" ]]; then
  doTmuxStuff
fi

# vim: ft=zsh
