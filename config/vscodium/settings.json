// #dotfiles: dst=$XDG_CONFIG_HOME/VSCodium/User/settings.json
// #dotfiles: dst=$XDG_CONFIG_HOME/Code/User/settings.json
// https://code.visualstudio.com/docs/getstarted/settings#_default-settings
{
    /**
     * Breadcrumb
     */
    "breadcrumbs.enabled": false,
    "breadcrumbs.symbolSortOrder": "type",

    /**
     * Editor
     */
    "editor.minimap.enabled": false,
    "editor.fontFamily": "'FiraMono Nerd Font Mono','DejaVu Sans Mono','Droid Sans Mono', 'monospace', 'Droid Sans Fallback'",
    "editor.fontSize": 16, // #eyestrain. This works in combination with "window.zoomLevel"
    "editor.inlayHints.fontSize": 13,
    "editor.lineHeight": 1.1, // #eyestrain
    "editor.lineNumbers": "on",
    "editor.renderLineHighlight": "all",
    "editor.fontLigatures": false,
    "editor.renderControlCharacters": false,
    "editor.wordSeparators": "`~!@#%^&*()-=+[{]}\\|;:'\",.<>/?",
    "editor.renderWhitespace": "trailing",
    "editor.formatOnPaste": true,
    "editor.formatOnSave": true,
    "editor.formatOnSaveMode": "file", // it is better to change it by language
    "editor.formatOnType": true,
    "editor.linkedEditing": true, // modify linked html tags
    "editor.bracketPairColorization.enabled": true,
    "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
    "editor.guides.bracketPairs": true,
    "editor.rulers": [80, 120],
    "editor.suggest.preview": true, // shows a opaque text next to the cursor
    "editor.suggest.insertMode": "replace", // I'm testing this
    "editor.quickSuggestions": {
        "other": "on", // default on
        "comments": "on", // default off
        "strings": "on" // default off
    },
    // #bad-suggestion I want:
    // 1. VSCode to not select the first suggestion,
    //    so I can type enter whenever I want.
    //    But that doesn't seem possible
    //    https://github.com/microsoft/vscode/issues/85768
    // 2. automatic suggestions/autocomplete only for IntelliSense
    //    If suggestions are from dictionaries or something, only show them
    //    if I've pressed control+space or something
    //    Is that possible?
    "editor.acceptSuggestionOnEnter": "smart", // workaround for item 1
    // Customize the syntax highlighting
    // Currently only TypeScript, JavaScript and Java have "Editor semantic highlighting" so,
    // the syntax highlighting can't be as good as in JetBrains' IDEs.
    // References:
    //   - Command pallet: "Developer: Inspect Editor Tokens and Scopes"
    //   - https://code.visualstudio.com/docs/getstarted/themes#_editor-syntax-highlighting
    //   - - https://code.visualstudio.com/api/language-extensions/semantic-highlight-guide
    //   - https://github.com/dracula/visual-studio-code/blob/master/src/dracula.yml
    "editor.tokenColorCustomizations":{
        "[*Molokai*]": {
            "variables": "#ca88ff",
            "numbers": "#ffffff",
            "textMateRules": [
                {
                    "scope": [
                        "string.quoted.docstring.multi.python",
                        "string.quoted.docstring.multi.python punctuation.definition.string.begin.python",
                        "string.quoted.docstring.multi.python punctuation.definition.string.end.python",
                        "string.quoted.docstring.multi.python constant.character.escape.python"
                    ],
                    "settings": {
                        "foreground": "#A0A0A0"
                    }
                }
            ]
        }
    },
    "editor.largeFileOptimizations": false,
    // under testing
    // https://learn.microsoft.com/en-us/visualstudio/ide/editor-sticky-scroll?view=vs-2022
    "editor.stickyScroll.enabled": true,

    /**
     * Explorer
     */
    // Notes:
    //  - there is no setting to increase the font size so, you need to use "window.zoomLevel" and "editor.fontSize"
    "explorer.confirmDragAndDrop": true, // future me: do not use false here :) I like that
    "explorer.confirmDelete": true,
    "explorer.confirmUndo": "verbose",
    "explorer.incrementalNaming": "smart", // no option to ask, like in PhpStorm?
    "explorer.autoReveal": false,
    "explorer.compactFolders": false,
    "explorer.fileNesting.enabled": true,
    "explorer.fileNesting.expand": true,
    "explorer.excludeGitIgnore": false, // use this or "files.exclude" or search.exclude". False here to edit .env files
    "explorer.openEditors.visible": 1, // hide Open Editors pane as I use only the workbench tabs

    /**
     * Files
     */
    "files.autoSave": "off", // to avoid saving unfinished code
    "files.trimTrailingWhitespace": true,
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    "files.enableTrash": true,
    //"files.hotExit": "onExit", // open-select-recent-projects-on-startup didn't work
    "files.exclude": {
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/.venv": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "**/Thumbs.db": true,
        "**/__pycache__": true,
        "**/.pytest_cache": true
    },

    /**
     * Git
     */
    "git.autoStash": true,
    "git.mergeEditor": true,

    /**
     * Keyboard
     */
    // in 2022 the "/" key still does not work in a pt-br keyword
    // https://github.com/microsoft/vscode/issues/24147
    // I will not use this because I don't know the side-effects
    // "keyboard.dispatch": "keyCode",

    /**
     * Problems
     */
    "problems.showCurrentInStatus": true,

    /**
     * Search
     */
    "search.smartCase": true,
    "search.useIgnoreFiles": true,
    "search.useParentIgnoreFiles": true,
    "search.useGlobalIgnoreFiles": false,
    "search.maxResults": 500,
    "search.mode": "reuseEditor",
    "search.searchOnType": true,
    "search.sortOrder": "type",
    "search.exclude": {
        "**/node_modules": true,
        "**/bower_components": true,
        "**/*.code-search": true,
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/.venv": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "**/Thumbs.db": true
    },

    /**
     * Security
     */
    "security.workspace.trust.untrustedFiles": "open",

    /**
     * Telemetry
     */
    "telemetry.telemetryLevel": "off",
    "redhat.telemetry.enabled": true,

    /**
     * Built-in terminal emulator
     */
    "terminal.integrated.fontFamily": "'DejaVuSansMono Nerd Font','Droid Sans Mono Slashed for Powerline','DejaVu Sans Mono'",
    "terminal.integrated.fontSize": 16, // #eyestrain
    "terminal.integrated.cursorStyle": "underline",
    "terminal.integrated.cursorBlinking": true,
    "terminal.explorerKind": "external",
    "terminal.integrated.rightClickBehavior": "copyPaste",
    "terminal.integrated.env.linux": {
        "PYTHONDEVMODE": "1",
        "PYTHONPATH": "${workspaceFolder}"
    },

    /**
     * Testing
     */
    "testing.defaultGutterClickAction": "contextMenu",
    // Peek View is pretty annoying
    "testing.automaticallyOpenPeekView": "never",

    /**
     * Window
     */
    "window.title": "${dirty}${rootName}${separator}${activeEditorMedium}",
    "window.menuBarVisibility": "toggle",
    "window.zoomLevel": 1, // #eyestrain. This works in combination with "editor.fontSize"
    "window.titleBarStyle": "custom", // fixes https://github.com/microsoft/vscode/issues/80798
    "window.openFoldersInNewWindow": "on",
    "window.commandCenter": false, // I'm testing this
    "window.restoreWindows": "none", // open-select-recent-projects-on-startup
    "window.restoreFullscreen": true,
    "window.newWindowDimensions": "inherit",

    /**
     * Workbench
     */
    // ext install nonylene.dark-molokai-theme
    "workbench.colorTheme": "Dark (Molokai)",
    "workbench.preferredDarkColorTheme": "Dark (Molokai)",
    // ext install vscode-icons
    "workbench.iconTheme": "vscode-icons",
    // Customize the Visual Studio Code color theme
    // https://code.visualstudio.com/api/references/theme-color
    "workbench.colorCustomizations": {
        "tab.activeBorder": "#1a5ce0",
        "tab.border": "#000000",
        "statusBar.background": "#303030",
        "statusBar.noFolderBackground": "#222225",
        "statusBar.debuggingBackground": "#511f1f",
        "editorInlayHint.background": "#303030",
        "editorInlayHint.parameterForeground": "#858585",
        "editorInlayHint.typeForeground": "#858585",
        // "editorBracketHighlight.foreground1": "#FFD700",
        // "editorBracketHighlight.foreground2": "#DA70D6",
        // "editorBracketHighlight.foreground3": "#179fff",
        "errorLens.errorBackground": "#fff0",
        "errorLens.infoBackground": "#fff0",
        "errorLens.hintBackground": "#fff0",
        "errorLens.warningBackground": "#fff0"
    },
    "workbench.tree.renderIndentGuides": "always",
    "workbench.tree.indent": 20, // disable Preview Mode because it's useless
    "workbench.list.openMode": "doubleClick",
    "workbench.layoutControl.enabled": true,
    "workbench.editor.titleScrollbarSizing": "large",
    "workbench.editor.enablePreview": false,
    "workbench.startupEditor": "welcomePageInEmptyWorkbench", // open-select-recent-projects-on-startup
    "workbench.view.alwaysShowHeaderActions": true,
    // necessary to see the problem for the current line
    // as the mouse hover can show too much unnecessary info
    "workbench.statusBar.visible": true,
    "workbench.activityBar.location": "top",
    // under testing
    "workbench.tree.enableStickyScroll": true,

    /**
     * By language
     */

    // ext install esbenp.prettier-vscode
    "[css]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },

     // ext install mechatroner.rainbow-csv
    "[csv]": {
    },

    // ext install golang.Go
    // https://github.com/golang/vscode-go/blob/master/README.md
    "[go]": {
        // #bad-suggestion and also an experiment that
        // tries to get better suggestions
        "editor.quickSuggestions": {
            "other": "on", // defualt on
            "comments": "off", // defualt off
            "strings": "off" // defualt off
        },
        "editor.suggest.shareSuggestSelections": false,
        "editor.inlineSuggest.enabled": true, // must be true for Copilot to work
        "editor.suggestOnTriggerCharacters": false,
        "editor.acceptSuggestionOnCommitCharacter": false,
        "editor.suggestSelection": "recentlyUsed", // doesn't seem to work
        "editor.formatOnSave": true,
        "editor.formatOnSaveMode": "file",
        "editor.formatOnType": true,
        "editor.formatOnPaste": true,
    },
    "go.inlayHints.assignVariableTypes": true,
    "go.inlayHints.compositeLiteralFields": true,
    "go.inlayHints.compositeLiteralTypes": true,
    "go.inlayHints.constantValues": true,
    "go.inlayHints.functionTypeParameters": true,
    "go.inlayHints.parameterNames": true,
    "go.inlayHints.rangeVariableTypes": true,
    "go.lintOnSave": "package",
    "go.useLanguageServer": true,
    "go.toolsManagement.autoUpdate": true,
    "gopls": {
        // For better syntax highlighting
        "ui.semanticTokens": true
    },

    "[dart]": {
        "editor.formatOnSave": true,
        "editor.formatOnType": true,
        "editor.selectionHighlight": false,
        "editor.suggest.snippetsPreventQuickSuggestions": false,
        "editor.suggestSelection": "first",
        "editor.tabCompletion": "onlySnippets",
        "editor.wordBasedSuggestions": "off"
    },

    "[html]": {
        // Prettier does not format bad HTML files
        // ext install esbenp.prettier-vscode
        //"editor.defaultFormatter": "esbenp.prettier-vscode",
        //
        // https://code.visualstudio.com/docs/languages/html#_formatting
        "editor.defaultFormatter": "vscode.html-language-features",
        "editor.formatOnSave": true,
        "editor.formatOnSaveMode": "file",
    },

    // ext install redhat.java
    "[java]": {
        "editor.formatOnSave": true,
        "editor.formatOnType": true,
        "editor.formatOnPaste": true,
    },
    "java.inlayHints.parameterNames.enabled": "literals",
    "java.codeGeneration.insertionLocation": "beforeCursor",
    "java.format.enabled": true,
    "java.format.comments.enabled": true,
    "java.format.onType.enabled": true,

    // ext install esbenp.prettier-vscode
    "[javascript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.formatOnSave": true,
        "editor.formatOnType": true,
        "editor.formatOnPaste": true,
        "editor.wordWrap": "wordWrapColumn",
        "editor.wordWrapColumn": 120, // but prettier's "printWidth" is set to 80
    },
    "javascript.inlayHints.parameterNames.enabled": "literals",
    "javascript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": true,
    "javascript.inlayHints.enumMemberValues.enabled": true,
    "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
    "javascript.inlayHints.parameterTypes.enabled": true,
    "javascript.inlayHints.propertyDeclarationTypes.enabled": true,
    "javascript.inlayHints.variableTypes.enabled": true,
    "javascript.inlayHints.variableTypes.suppressWhenTypeMatchesName": true,
    "javascript.updateImportsOnFileMove.enabled": "always",
    "json.maxItemsComputed": 10000,
    "json.schemas": [],
    "json.schemaDownload.enable":true,
    "json.format.enable": true,
    // Keep empty lines in jsonc files. But this will also affect json files.
    //"json.format.keepLines": true,
    "[jsonc]": {
        "editor.quickSuggestions": {
            "strings": true
        },
        "editor.suggest.insertMode": "replace",
        // I want to keep blank lines
        "editor.formatOnSaveMode": "modifications",
        "editor.defaultFormatter": "vscode.json-language-features",
    },

    // Output panel
    "[Log]": {
        "editor.fontSize": 16 // #eyestrain
    },

    // ext install DavidAnson.vscode-markdownlint
    // ext install ms-vscode.Theme-MarkdownKit ?does nothing?
    // #markdown-highlight does not work for console commands
    //   may be related to https://github.com/microsoft/vscode/issues/91279
    "[markdown]": {
        "editor.defaultFormatter": "yzhang.markdown-all-in-one",
        "editor.formatOnSave": true,
        "editor.formatOnPaste": true
    },
    "markdown.preview.fontSize": 16, // #eyestrain

    // Built-in support for PHP is bad, so use zobo.php-intellisense or nothing
    // extensions:
    // ext install xdebug.php-debug
    // ext install bmewburn.vscode-intelephense-client (but good features are paid https://intelephense.com)
    // ext install zobo.php-intellisense
    // ext install ikappas.phpcs
    // ext install junstyle.php-cs-fixer
    // ext install neilbrayfield.php-docblocker
    // ext install MehediDracula.php-namespace-resolver
    // ext install phiter.phpstorm-snippets
    // ext install breezelin.phpstan
    // for "Parameter Hints":
    // ext install liamhammett.inline-parameters or ext install BobbyZrncev.intellij-parameter-hints
    "php.suggest.basic": false,
    "php.validate.enable": true,
    "php.validate.run": "onType",

    // ext install ms-python.python
    // ext install ~ms-pyright.pyright~ or ms-python.vscode-pylance
    // ext install ms-python.pylint
    // ext install ms-python.flake8 (pylint may be sufficient)
    // ext install ms-python.mypy-type-checker
    // ext install ms-python.black-formatter
    "[python]": {
        // use the extension ms-python.black-formatter
        "editor.defaultFormatter": "ms-python.black-formatter",
        "editor.formatOnSave": true,

        // black can only format the entire file
        "editor.formatOnSaveMode": "file",
        "editor.formatOnPaste": false,

        // #TODO test
        // "editor.wordWrap": "bounded",
        // "editor.wordWrapColumn": 80,
        // "editor.wrappingIndent": "same",
        // HOVER_ISSUE https://github.com/microsoft/vscode/issues/73120
        // "editor.hover.enabled": false

        "editor.codeActionsOnSave": {
            // ext install ms-python.isort
            "source.organizeImports": "always"
        },
    },
    "python.defaultInterpreterPath": "/usr/bin/python",
    "python.envFile": "${workspaceFolder}/.env", // To avoid "ModuleNotFoundError"
    "python.autoComplete.extraPaths": [],
    "python.diagnostics.sourceMapsEnabled": true,
    "python.experiments.enabled": false,
    "python.sortImports.path": "isort",
    /**
     * You can configure your tests anytime by using the Python: Configure Tests
     * command from the Command Palette.
     * "If both frameworks (unittest and pytest) are enabled, then the Python
     * extension will only run pytest." (what does that mean? Because I've
     * sucefully ran the unitests with both enabled)
     */
    "python.testing.unittestEnabled": true,
    "python.testing.pytestEnabled": true,
    "python.testing.autoTestDiscoverOnSaveEnabled": true,
    "python.analysis.typeCheckingMode": "strict",
    "python.analysis.autoImportCompletions": true,
    "python.analysis.extraPaths": [],
    "python.analysis.inlayHints.functionReturnTypes": true,
    "python.analysis.inlayHints.variableTypes": true,
    "python.analysis.diagnosticSeverityOverrides": {
        // decrease the severity of some pylance diagnostics
        "reportUnknownVariableType":"warning",
        "reportUnknownArgumentType": "warning",
        "reportUnknownLambdaType":"information",
        "reportUnknownMemberType": "warning",
        "reportUnknownParameterType": "warning",
        "reportMissingParameterType": "warning"
    },
    "black-formatter.showNotifications": "onError",
    // Pylance should not analyze these files.
    // Note: this will not work if pyproject.toml contains [tool.pyright]
    //       and I was unable to ignore "/usr/lib/**/*.py" there.
    "python.analysis.ignore": [
        "**/site-packages/**/*.py",
        ".vscode/**/*.py",
        ".vscode/**/*.pyi",
        "**/.vscode-oss/**/*.py",
        "**/.vscode-oss/**/*.pyi",
        "/home/*/.vscode/extensions/**/*.pyi",
        "/home/*/.vscode-oss/extensions/**/*.pyi",
        "/home/*/.cache/pypoetry/virtualenvs/**/*.py",
        "/usr/lib/**/*.py"
    ],
    // pylint is incredible slow. So, only run it on save (or use flake8)
    "pylint.lintOnChange": false,
    "pylint.ignorePatterns": [
        "**/site-packages/**/*.py",
        ".vscode/*.py",
        "/usr/lib/**/*.py",
    ],
    "pylint.showNotifications": "onError",
    "mypy-type-checker.ignorePatterns": [
        "**/site-packages/**/*.py",
        ".vscode/*.py",
        "/usr/lib/**/*.py",
    ],
    "mypy-type-checker.showNotifications": "onError",
    // ext install ms-python.isort
    "isort.args": [ "--profile", "black" ],
    // ext install ms-python.vscode-pylance
    // this is a proprietary software and Microsoft does not allow it
    // to run outside VSCode
    // https://www.reddit.com/r/linux/comments/k0s8qw/vs_code_developers_prevent_running_the_new/
    // https://github.com/microsoft/pylance-release/issues/483
    // https://github.com/VSCodium/vscodium/issues/892
    // https://github.com/flathub/com.vscodium.codium/issues/90
    // "python.languageServer": "Pylance",
    // "python.languageServer": "Jedi",

    "[shellscript]": {
        // ext install foxundermoon.shell-format
        "editor.defaultFormatter": "foxundermoon.shell-format",
        "files.eol": "\n",
    },
    "bashIde.highlightParsingErrors": true,

    "[xml]": {
        // ext install redhat.vscode-xml
        "editor.defaultFormatter": "redhat.vscode-xml",
    },
    // https://github.com/redhat-developer/vscode-xml/tree/main/docs
    "xml.format.enabled": false,
    "xml.format.joinCDATALines": true,
    "xml.format.joinContentLines": true,
    "xml.format.preservedNewlines": 0,
    "xml.preferences.quoteStyle": "double",
    "xml.format.enforceQuoteStyle": "preferred",

    // https://github.com/redhat-developer/vscode-yaml
    "yaml.schemaStore.enable": true,

    /**
     * Miscellaneous Extensions
     */
     // https://github.com/formulahendry/vscode-code-runner#configuration
    "code-runner.executorMap": {
        // use shortcut Ctrl+Alt+J, or press F1 and then select/type Run By Language,
        // then type javascript
        // "javascript": "docker run --rm -v $dir:/usr/src/app node:14-slim node /usr/src/app/$fileName",
        // To avoid "ModuleNotFoundError" and "AttributeError"
        // for some reason it only work with "Run By Language" described above.
        // Or you can run "export PYTHONPATH=." in the integrated terminal.
        "python": "PYTHONDEVMODE=1 PYTHONPATH=$workspaceRoot python $fullFileName",
        // didn't work. I removed MagicPython
        //"MagicPython": "PYTHONPATH=$workspaceRoot python $fullFileName"
    },
    "code-runner.clearPreviousOutput": true,
    "code-runner.runInTerminal": false,
    // ext install vscode-icons
    // https://github.com/vscode-icons/vscode-icons/wiki/Configuration
    "vsicons.dontShowNewVersionMessage": true,
    "debug.console.fontSize": 16, // #eyestrain
    "rest-client.fontSize": 16, // #eyestrain
    // ext install eamodio.gitlens
    // https://github.com/gitkraken/vscode-gitlens
    "gitlens.currentLine.enabled": false, // on by default, but annoying
    "gitlens.codeLens.enabled": false, // on by default, but annoying
    // ext install streetsidesoftware.code-spell-checker
    // ext install streetsidesoftware.code-spell-checker-portuguese-brazilian
    "cSpell.language": "en,pt-BR",
    "cSpell.diagnosticLevel": "Hint",
    "cSpell.userWords": [
        "Alacritty",
        "awslambdaric",
        "Coroutines",
        "dotenv",
        "dotfiles",
        "esbenp",
        "fastapi",
        "gettext",
        "isort",
        "journalctl",
        "linkedin",
        "middlewares",
        "mypy",
        "mysql",
        "openai",
        "pipx",
        "pycache",
        "pydantic",
        "pylance",
        "pylint",
        "Pylint",
        "pyproject",
        "pyright",
        "pytest",
        "redhat",
        "rtype",
        "sqlite",
        "Stringable",
        "talentify",
        "tobias",
        "usleep",
        "venv",
        "webservice"
    ],
    // ext install usernamehw.errorlens
    "errorLens.addNumberOfDiagnostics": true,
    // ext install emeraldwalk.RunOnSave
    // go install github.com/segmentio/golines@latest
    "emeraldwalk.runonsave": {
        "commands": [
            {
                "match": "\\.go$",
                "cmd": "golines ${file} --max-len=100 --shorten-comments --write-output"
            }
        ],
    },
    // ext install GitHub.copilot
    "github.copilot.enable": {
        "*": true,
        "plaintext": false,
        "markdown": false,
        "scminput": false
    },
    "github.copilot.editor.enableAutoCompletions": true,
    "window.customTitleBarVisibility": "auto",
    "workbench.productIconTheme": "material-product-icons",
}
